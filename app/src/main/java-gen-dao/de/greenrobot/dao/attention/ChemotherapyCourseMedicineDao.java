package de.greenrobot.dao.attention;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import de.greenrobot.dao.attention.ChemotherapyCourseMedicine;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "CHEMOTHERAPY_COURSE_MEDICINE".
*/
public class ChemotherapyCourseMedicineDao extends AbstractDao<ChemotherapyCourseMedicine, Long> {

    public static final String TABLENAME = "CHEMOTHERAPY_COURSE_MEDICINE";

    /**
     * Properties of entity ChemotherapyCourseMedicine.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property MedicineId = new Property(1, Long.class, "medicineId", false, "MEDICINE_ID");
        public final static Property ChemotherapyCourseId = new Property(2, Long.class, "chemotherapyCourseId", false, "CHEMOTHERAPY_COURSE_ID");
        public final static Property MedicineName = new Property(3, String.class, "medicineName", false, "MEDICINE_NAME");
    };


    public ChemotherapyCourseMedicineDao(DaoConfig config) {
        super(config);
    }
    
    public ChemotherapyCourseMedicineDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CHEMOTHERAPY_COURSE_MEDICINE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"MEDICINE_ID\" INTEGER," + // 1: medicineId
                "\"CHEMOTHERAPY_COURSE_ID\" INTEGER," + // 2: chemotherapyCourseId
                "\"MEDICINE_NAME\" TEXT);"); // 3: medicineName
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CHEMOTHERAPY_COURSE_MEDICINE\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, ChemotherapyCourseMedicine entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Long medicineId = entity.getMedicineId();
        if (medicineId != null) {
            stmt.bindLong(2, medicineId);
        }
 
        Long chemotherapyCourseId = entity.getChemotherapyCourseId();
        if (chemotherapyCourseId != null) {
            stmt.bindLong(3, chemotherapyCourseId);
        }
 
        String medicineName = entity.getMedicineName();
        if (medicineName != null) {
            stmt.bindString(4, medicineName);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public ChemotherapyCourseMedicine readEntity(Cursor cursor, int offset) {
        ChemotherapyCourseMedicine entity = new ChemotherapyCourseMedicine( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1), // medicineId
            cursor.isNull(offset + 2) ? null : cursor.getLong(offset + 2), // chemotherapyCourseId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3) // medicineName
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, ChemotherapyCourseMedicine entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setMedicineId(cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1));
        entity.setChemotherapyCourseId(cursor.isNull(offset + 2) ? null : cursor.getLong(offset + 2));
        entity.setMedicineName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(ChemotherapyCourseMedicine entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(ChemotherapyCourseMedicine entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
