package de.greenrobot.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import de.greenrobot.dao.Indicator;
import de.greenrobot.dao.Inspection;
import de.greenrobot.dao.Interpretation;
import de.greenrobot.dao.Tumor;
import de.greenrobot.dao.Medicine;
import de.greenrobot.dao.City;

import de.greenrobot.dao.IndicatorDao;
import de.greenrobot.dao.InspectionDao;
import de.greenrobot.dao.InterpretationDao;
import de.greenrobot.dao.TumorDao;
import de.greenrobot.dao.MedicineDao;
import de.greenrobot.dao.CityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig indicatorDaoConfig;
    private final DaoConfig inspectionDaoConfig;
    private final DaoConfig interpretationDaoConfig;
    private final DaoConfig tumorDaoConfig;
    private final DaoConfig medicineDaoConfig;
    private final DaoConfig cityDaoConfig;

    private final IndicatorDao indicatorDao;
    private final InspectionDao inspectionDao;
    private final InterpretationDao interpretationDao;
    private final TumorDao tumorDao;
    private final MedicineDao medicineDao;
    private final CityDao cityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        indicatorDaoConfig = daoConfigMap.get(IndicatorDao.class).clone();
        indicatorDaoConfig.initIdentityScope(type);

        inspectionDaoConfig = daoConfigMap.get(InspectionDao.class).clone();
        inspectionDaoConfig.initIdentityScope(type);

        interpretationDaoConfig = daoConfigMap.get(InterpretationDao.class).clone();
        interpretationDaoConfig.initIdentityScope(type);

        tumorDaoConfig = daoConfigMap.get(TumorDao.class).clone();
        tumorDaoConfig.initIdentityScope(type);

        medicineDaoConfig = daoConfigMap.get(MedicineDao.class).clone();
        medicineDaoConfig.initIdentityScope(type);

        cityDaoConfig = daoConfigMap.get(CityDao.class).clone();
        cityDaoConfig.initIdentityScope(type);

        indicatorDao = new IndicatorDao(indicatorDaoConfig, this);
        inspectionDao = new InspectionDao(inspectionDaoConfig, this);
        interpretationDao = new InterpretationDao(interpretationDaoConfig, this);
        tumorDao = new TumorDao(tumorDaoConfig, this);
        medicineDao = new MedicineDao(medicineDaoConfig, this);
        cityDao = new CityDao(cityDaoConfig, this);

        registerDao(Indicator.class, indicatorDao);
        registerDao(Inspection.class, inspectionDao);
        registerDao(Interpretation.class, interpretationDao);
        registerDao(Tumor.class, tumorDao);
        registerDao(Medicine.class, medicineDao);
        registerDao(City.class, cityDao);
    }
    
    public void clear() {
        indicatorDaoConfig.getIdentityScope().clear();
        inspectionDaoConfig.getIdentityScope().clear();
        interpretationDaoConfig.getIdentityScope().clear();
        tumorDaoConfig.getIdentityScope().clear();
        medicineDaoConfig.getIdentityScope().clear();
        cityDaoConfig.getIdentityScope().clear();
    }

    public IndicatorDao getIndicatorDao() {
        return indicatorDao;
    }

    public InspectionDao getInspectionDao() {
        return inspectionDao;
    }

    public InterpretationDao getInterpretationDao() {
        return interpretationDao;
    }

    public TumorDao getTumorDao() {
        return tumorDao;
    }

    public MedicineDao getMedicineDao() {
        return medicineDao;
    }

    public CityDao getCityDao() {
        return cityDao;
    }

}
